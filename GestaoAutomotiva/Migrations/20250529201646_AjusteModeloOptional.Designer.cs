// <auto-generated />
using System;
using GestaoAutomotiva.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestaoAutomotiva.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250529201646_AjusteModeloOptional")]
    partial class AjusteModeloOptional
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("GestaoAutomotiva.Models.AcessoriosCarro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CambioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CapotaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarroceriaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MotorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RodasPneusId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SuspensaoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CambioId");

                    b.HasIndex("CapotaId");

                    b.HasIndex("CarroceriaId");

                    b.HasIndex("MotorId");

                    b.HasIndex("RodasPneusId");

                    b.HasIndex("SuspensaoId");

                    b.ToTable("AcessoriosCarros");
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.Atividade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarroId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DataPrevista")
                        .HasColumnType("TEXT");

                    b.Property<int>("EstimativaDias")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EtapaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EtapaId1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ServicoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CarroId");

                    b.HasIndex("EtapaId");

                    b.HasIndex("EtapaId1");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("ServicoId");

                    b.ToTable("Atividades");
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.Cambio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModeloId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ModeloId");

                    b.ToTable("Cambios");
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.Capota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModeloId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ModeloId");

                    b.ToTable("Capotas");
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.Carro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AcessoriosCarroId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IdCarro")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ModeloId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AcessoriosCarroId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ModeloId");

                    b.ToTable("Carros");
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.Carroceria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModeloId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ModeloId");

                    b.ToTable("Carrocerias");
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.Etapa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Ordem")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Etapas");
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Especialidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.Modelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Modelos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "FURLAN GT40"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "FURLAN COBRA"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "FURLAN SSK1929"
                        });
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.Motor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ModeloId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroMotor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PlacaVeiculoDoador")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ModeloId");

                    b.ToTable("Motors");
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.OrdemServico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Almoxarifado")
                        .HasColumnType("TEXT");

                    b.Property<int?>("AtividadeId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CarroId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataAbertura")
                        .HasColumnType("TEXT");

                    b.Property<string>("EtapaAtual")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Inspetor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacoes")
                        .HasColumnType("TEXT");

                    b.Property<string>("Prioridade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tarefas")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AtividadeId");

                    b.ToTable("OrdemServicos");
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.RodaPneu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModeloId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ModeloId");

                    b.ToTable("RodasPneus");
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.Servico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EstimativaDias")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.Suspensao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ModeloId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ModeloId");

                    b.ToTable("Suspensaos");
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@gestao.com",
                            Nome = "Administrador",
                            Senha = "admin123",
                            Tipo = "Admin"
                        });
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.AcessoriosCarro", b =>
                {
                    b.HasOne("GestaoAutomotiva.Models.Cambio", "Cambio")
                        .WithMany()
                        .HasForeignKey("CambioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoAutomotiva.Models.Capota", "Capota")
                        .WithMany()
                        .HasForeignKey("CapotaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoAutomotiva.Models.Carroceria", "Carroceria")
                        .WithMany()
                        .HasForeignKey("CarroceriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoAutomotiva.Models.Motor", "Motor")
                        .WithMany()
                        .HasForeignKey("MotorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoAutomotiva.Models.RodaPneu", "RodasPneus")
                        .WithMany()
                        .HasForeignKey("RodasPneusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoAutomotiva.Models.Suspensao", "Suspensao")
                        .WithMany()
                        .HasForeignKey("SuspensaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cambio");

                    b.Navigation("Capota");

                    b.Navigation("Carroceria");

                    b.Navigation("Motor");

                    b.Navigation("RodasPneus");

                    b.Navigation("Suspensao");
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.Atividade", b =>
                {
                    b.HasOne("GestaoAutomotiva.Models.Carro", "Carro")
                        .WithMany()
                        .HasForeignKey("CarroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoAutomotiva.Models.Etapa", "Etapa")
                        .WithMany()
                        .HasForeignKey("EtapaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GestaoAutomotiva.Models.Etapa", null)
                        .WithMany("Atividades")
                        .HasForeignKey("EtapaId1");

                    b.HasOne("GestaoAutomotiva.Models.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoAutomotiva.Models.Servico", "Servico")
                        .WithMany()
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carro");

                    b.Navigation("Etapa");

                    b.Navigation("Funcionario");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.Cambio", b =>
                {
                    b.HasOne("GestaoAutomotiva.Models.Modelo", "Modelo")
                        .WithMany("Cambios")
                        .HasForeignKey("ModeloId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.Capota", b =>
                {
                    b.HasOne("GestaoAutomotiva.Models.Modelo", "Modelo")
                        .WithMany("Capotas")
                        .HasForeignKey("ModeloId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.Carro", b =>
                {
                    b.HasOne("GestaoAutomotiva.Models.AcessoriosCarro", "Acessorios")
                        .WithMany()
                        .HasForeignKey("AcessoriosCarroId");

                    b.HasOne("GestaoAutomotiva.Models.Cliente", "Cliente")
                        .WithMany("Carros")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoAutomotiva.Models.Modelo", "Modelo")
                        .WithMany()
                        .HasForeignKey("ModeloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Acessorios");

                    b.Navigation("Cliente");

                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.Carroceria", b =>
                {
                    b.HasOne("GestaoAutomotiva.Models.Modelo", "Modelo")
                        .WithMany("Carrocerias")
                        .HasForeignKey("ModeloId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.Motor", b =>
                {
                    b.HasOne("GestaoAutomotiva.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("GestaoAutomotiva.Models.Modelo", "Modelo")
                        .WithMany("Motores")
                        .HasForeignKey("ModeloId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Cliente");

                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.OrdemServico", b =>
                {
                    b.HasOne("GestaoAutomotiva.Models.Atividade", "Atividade")
                        .WithMany()
                        .HasForeignKey("AtividadeId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Atividade");
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.RodaPneu", b =>
                {
                    b.HasOne("GestaoAutomotiva.Models.Modelo", "Modelo")
                        .WithMany()
                        .HasForeignKey("ModeloId");

                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.Suspensao", b =>
                {
                    b.HasOne("GestaoAutomotiva.Models.Modelo", "Modelo")
                        .WithMany("Suspensoes")
                        .HasForeignKey("ModeloId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.Cliente", b =>
                {
                    b.Navigation("Carros");
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.Etapa", b =>
                {
                    b.Navigation("Atividades");
                });

            modelBuilder.Entity("GestaoAutomotiva.Models.Modelo", b =>
                {
                    b.Navigation("Cambios");

                    b.Navigation("Capotas");

                    b.Navigation("Carrocerias");

                    b.Navigation("Motores");

                    b.Navigation("Suspensoes");
                });
#pragma warning restore 612, 618
        }
    }
}
